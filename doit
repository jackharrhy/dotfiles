#!/bin/bash
function line() {
	LINELOOP=$(tput cols)
	if [ $1 ]; then
		tput setf $1
	fi
	until [ $LINELOOP == 0 ]; do
		printf '█'
		let "LINELOOP -= 1"
	done
	tput sgr0
}

function startNetwork() {
	echo 'Starting Network...'
	sudo netctl start harrhy
	echo 'Finished Network!'
}

function restartNetwork() {
	echo 'Shutting Down Network...'
	sudo netctl stop harrhy
	echo 'Network Shutdown, Starting Network...'
	sudo netctl start harrhy
	echo 'Network Shutdown'
}

function pingAddress() {
	# Draw colored line & string based off argument
	line $3
	tput setf $3; tput bold
	printf '  %q\n' "$1"
	tput sgr0
	ping -c 6 $2
	# Don't print a line if a fourth argument is given
	if [ -z $4 ]; then
		line $3
	fi
}
function checkNetwork() {
	# Check 4 different places to asses the networks current health
	echo 'Checking Network... (Ctrt+C to stop)'
	pingAddress "Wifi-Router:" 192.168.1.1 3
	pingAddress "Second-Router:" 192.168.2.1 4
	pingAddress "Google-DNS:" 8.8.8.8 5
	pingAddress "google.com:" google.com 6 "last"
}

function restartDisplay() {
	echo 'Starting Display...'
	# Set VGA output as primary source; disabling built in monitor
	xrandr --output VGA1 --primary
	# Small hack to fix chromium's rendering of the popup window
	xrandr -s 640x480
	xrandr -s 1920x1080
	# Make sure our DPI is in check, and hasn't been ruined by a rouge program
	xrandr --dpi 90
	echo 'Finished Display!'
}

function initRedshift() {
	# Redshift goes BESERK if you open up a few process at the same time; lets avoid this :)
	killRedshift
	echo 'Initiating redshift process in another thread...'
	# Spin up new redshift thread with my Lat/Long
	redshift -l 47.565520:-52.765419 > /dev/null &
	echo 'Initiated!'
}

function killRedshift() {
	echo 'Killing redshift process...'
	# Use pkill to find and kill all the redshift process (mwhahaha)
	pkill redshift
	echo 'Killed!'
}

function informOfChoices() {
	printf '
	basic-startup
	full-startup

	restart-network
	check-network

	restart-display

	heal-eyes
	hurt-eyes
'
}

# Print decorative line and then check for argument
line 150
if [ $1 ]; then
	# If an argument is past, find method to act upon it
	if [ $1 = 'restart-network' ]; then
		restartNetwork

	elif [ $1 = 'check-network' ]; then
		checkNetwork

	elif [ $1 = 'basic-startup' ]; then
		startNetwork
		restartDisplay

	elif [ $1 = 'full-startup' ]; then
		startNetwork
		restartDisplay
		initRedshift

	elif [ $1 = 'restart-display' ]; then
		restartDisplay

	elif [ $1 = 'heal-eyes' ]; then
		initRedshift

	elif [ $1 = 'hurt-eyes' ]; then
		killRedshift

	else
		# User is drunk, inform of this
		echo 'Unknown Command :(\n'
		informOfChoices
	fi

# User didn't place an argument; silly user ¯\_(ツ)_/¯
else
	informOfChoices
fi
# Gotta have that line™
line 150
# Incase of any weird screw ups, reset fancy terminal stuff with tput
tput sgr0
